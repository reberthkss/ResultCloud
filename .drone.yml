#
# We are building GCC with make and Clang with ninja, the combinations are more
# or less arbitrarily chosen. We just want to check that both compilers and both
# CMake generators work. It's unlikely that a specific generator only breaks
# with a specific compiler.
#

workspace:
  base: /drone
  path: src/github.com/owncloud/client

branches:
  - master
  - 2.5
  - 2.4

clone:
  git:
    image: plugins/git
    pull: true
    tags: false

pipeline:
  prepare-clang:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - mkdir clang-build
      - cd clang-build
      - cmake -GNinja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE="Debug" -DBUILD_TESTING=1 ..

  building-clang:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - cd clang-build
      - ninja -j4

  testing-clang:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - cd clang-build
      - useradd -m -s /bin/bash tester
      - chown -R tester:tester .
      - su-exec tester ctest --output-on-failure -LE nodrone

  prepare-gcc:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - mkdir gcc-build
      - cd gcc-build
      - cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE="Debug" -DBUILD_TESTING=1 ..

  building-gcc:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - cd gcc-build
      - make -j4

  testing-gcc:
    image: owncloudci/client:latest
    pull: true
    environment:
      - LC_ALL=C.UTF-8
    commands:
      - cd gcc-build
      - useradd -m -s /bin/bash tester
      - chown -R tester:tester .
      - su-exec tester ctest --output-on-failure -LE nodrone

  cache-restore:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    restore: true
    when:
      local: false

  docs-deps:
    image: owncloudci/nodejs:11
    pull: true
    commands:
      - cd docs/
      - yarn install

  docs-validate:
    image: owncloudci/nodejs:11
    pull: true
    commands:
      - cd docs/
      - yarn validate

  docs-build:
    image: owncloudci/nodejs:11
    pull: true
    commands:
      - cd docs/
      - yarn antora

  docs-pdf:
    image: owncloudci/asciidoctor:latest
    pull: true
    commands:
      - cd docs/
      - make pdf

  docs-artifacts:
    image: owncloud/ubuntu:latest
    pull: true
    commands:
      - tree docs/public/

  cache-rebuild:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    rebuild: true
    mount:
      - docs/cache
    when:
      local: false
      event: [ push ]

  cache-flush:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    flush: true
    flush_age: 14
    when:
      local: false
      event: [ push ]

  upload-pdf:
    image: plugins/s3-sync:1
    pull: true
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    bucket: uploads
    endpoint: https://doc.owncloud.com
    path_style: true
    source: docs/build/
    target: /deploy
    delete: false
    when:
      local: false
      event: [ push ]

  notify-slack:
    image: plugins/slack
    pull: true
    secrets: [ slack_webhook ]
    channel: desktop
    when:
      local: false
      event: [ push ]
      status: [ failure, changed ]
